{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst start = document.querySelector('[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nlet selectedDates = null;\nlet timerInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(date) {\n    selectedDates = date[0];\n    if (selectedDates < new Date()) {\n      start.disabled = true;\n      iziToast.error({\n        message: 'Pick a date in the future!',\n        position: 'topRight',\n      });\n    } else {\n      start.disabled = false;\n    }\n    console.log(date[0]);\n  },\n};\n\nflatpickr(input, options);\n\nstart.addEventListener('click', () => {\n  input.disabled = true;\n  start.disabled = true;\n\n  timerInterval = setInterval(() => {\n    let time = selectedDates - new Date();\n    console.log(convertMs(time));\n    if (time <= 0) {\n      clearInterval(timerInterval);\n      updateTimer(0, 0, 0, 0);\n      input.disabled = false;\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(time);\n    updateTimer(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nconst updateTimer = (day, hour, minute, second) => {\n  days.textContent = pad(day);\n  hours.textContent = pad(hour);\n  minutes.textContent = pad(minute);\n  seconds.textContent = pad(second);\n};\n\nconst pad = value => {\n  return String(value).padStart(2, '0');\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000));\n// console.log(convertMs(140000));\n// console.log(convertMs(24140000));\n"],"names":["input","start","days","hours","minutes","seconds","selectedDates","timerInterval","options","date","iziToast","flatpickr","time","convertMs","updateTimer","day","hour","minute","second","pad","value","ms"],"mappings":"2GAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvD,IAAIC,EAAgB,KAChBC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAM,CACZH,EAAgBG,EAAK,CAAC,EAClBH,EAAgB,IAAI,MACtBL,EAAM,SAAW,GACjBS,EAAS,MAAM,CACb,QAAS,6BACT,SAAU,UAClB,CAAO,GAEDT,EAAM,SAAW,GAEnB,QAAQ,IAAIQ,EAAK,CAAC,CAAC,CACpB,CACH,EAEAE,EAAUX,EAAOQ,CAAO,EAExBP,EAAM,iBAAiB,QAAS,IAAM,CACpCD,EAAM,SAAW,GACjBC,EAAM,SAAW,GAEjBM,EAAgB,YAAY,IAAM,CAChC,IAAIK,EAAON,EAAgB,IAAI,KAE/B,GADA,QAAQ,IAAIO,EAAUD,CAAI,CAAC,EACvBA,GAAQ,EAAG,CACb,cAAcL,CAAa,EAC3BO,EAAY,EAAG,EAAG,EAAG,CAAC,EACtBd,EAAM,SAAW,GACjB,MACD,CACD,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYQ,EAAUD,CAAI,EACxDE,EAAYZ,EAAMC,EAAOC,EAASC,CAAO,CAC1C,EAAE,GAAI,CACT,CAAC,EAED,MAAMS,EAAc,CAACC,EAAKC,EAAMC,EAAQC,IAAW,CACjDhB,EAAK,YAAciB,EAAIJ,CAAG,EAC1BZ,EAAM,YAAcgB,EAAIH,CAAI,EAC5BZ,EAAQ,YAAce,EAAIF,CAAM,EAChCZ,EAAQ,YAAcc,EAAID,CAAM,CAClC,EAEMC,EAAMC,GACH,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAGtC,SAASP,EAAUQ,EAAI,CAMrB,MAAMnB,EAAO,KAAK,MAAMmB,EAAK,KAAG,EAC1BlB,EAAQ,KAAK,MAAOkB,EAAK,MAAO,IAAI,EACpCjB,EAAU,KAAK,MAAQiB,EAAK,MAAO,KAAQ,GAAM,EACjDhB,EAAU,KAAK,MAASgB,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAnB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}